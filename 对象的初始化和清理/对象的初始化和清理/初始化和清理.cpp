#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
using namespace std;

//对象的初始化和清理
//1、构造函数		进行清理化操作
class Person
{
	//1.构造函数
	// 没有返回值也不用写void
	// 函数名 与类名相同
	// 构造函数时可以有参数，可以发生重载
	//创建对象时，构造函数会自动调用(注意是自动调用)，且只调用一次
public:
	Person()
	{
		cout << "Person 构造函数的调用" << endl;
	}

	//2.析构函数
	/*
		没有返回值，不写void
		函数名和类名相同， 在名称前要加~
		析构函数不可以有参数，不可以发生重载
		对象在销毁前会自动调用析构函数，且只调用一次
	*/
	~Person()
	{
		cout << "Person 析构函数的调用" << endl;
	}
};

//构造和析构是必须有的实现，如果我们不写，编译器会自动提供一个空实现的构造和析构函数
void test1()
{
	Person p;		//在栈上的的操作，test1执行完毕后，释放这个对象
}
//2、析构函数		进行清理操作
int main1()
{
	test1();
	Person p1;
	system("pause");		//p1的析构函数在这里会被卡住
	return 0;
}